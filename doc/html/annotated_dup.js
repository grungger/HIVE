var annotated_dup =
[
    [ "Virtual", null, [
      [ "And", "class_virtual_1_1_and.html", "class_virtual_1_1_and" ],
      [ "And3", "class_virtual_1_1_and3.html", "class_virtual_1_1_and3" ],
      [ "BaseGate", "class_virtual_1_1_base_gate.html", null ],
      [ "BitMemory", "class_virtual_1_1_bit_memory.html", "class_virtual_1_1_bit_memory" ],
      [ "byte_t", "struct_virtual_1_1byte__t.html", null ],
      [ "ByteAdder", "class_virtual_1_1_byte_adder.html", "class_virtual_1_1_byte_adder" ],
      [ "ByteAnd", "class_virtual_1_1_byte_and.html", "class_virtual_1_1_byte_and" ],
      [ "ByteArg", "struct_virtual_1_1_byte_arg.html", null ],
      [ "ByteMaker", "class_virtual_1_1_byte_maker.html", null ],
      [ "ByteMemory", "class_virtual_1_1_byte_memory.html", "class_virtual_1_1_byte_memory" ],
      [ "byteMicroCircuit", "class_virtual_1_1byte_micro_circuit.html", "class_virtual_1_1byte_micro_circuit" ],
      [ "ByteMUX", "class_virtual_1_1_byte_m_u_x.html", "class_virtual_1_1_byte_m_u_x" ],
      [ "ByteNAND", "class_virtual_1_1_byte_n_a_n_d.html", "class_virtual_1_1_byte_n_a_n_d" ],
      [ "ByteNeg", "class_virtual_1_1_byte_neg.html", "class_virtual_1_1_byte_neg" ],
      [ "ByteNor", "class_virtual_1_1_byte_nor.html", "class_virtual_1_1_byte_nor" ],
      [ "ByteNot", "class_virtual_1_1_byte_not.html", "class_virtual_1_1_byte_not" ],
      [ "ByteOr", "class_virtual_1_1_byte_or.html", "class_virtual_1_1_byte_or" ],
      [ "ByteOutput", "class_virtual_1_1_byte_output.html", null ],
      [ "ByteSplitter", "class_virtual_1_1_byte_splitter.html", null ],
      [ "ByteSwitch_in", "class_virtual_1_1_byte_switch__in.html", null ],
      [ "Circuit", "class_virtual_1_1_circuit.html", null ],
      [ "Counter", "class_virtual_1_1_counter.html", "class_virtual_1_1_counter" ],
      [ "Delay", "class_virtual_1_1_delay.html", null ],
      [ "FullAdder", "class_virtual_1_1_full_adder.html", "class_virtual_1_1_full_adder" ],
      [ "Gate", "class_virtual_1_1_gate.html", "class_virtual_1_1_gate" ],
      [ "HalfAdder", "class_virtual_1_1_half_adder.html", "class_virtual_1_1_half_adder" ],
      [ "microCircuit", "class_virtual_1_1micro_circuit.html", "class_virtual_1_1micro_circuit" ],
      [ "NAND", "class_virtual_1_1_n_a_n_d.html", "class_virtual_1_1_n_a_n_d" ],
      [ "Nor", "class_virtual_1_1_nor.html", "class_virtual_1_1_nor" ],
      [ "Not", "class_virtual_1_1_not.html", "class_virtual_1_1_not" ],
      [ "OneBitDecoder", "class_virtual_1_1_one_bit_decoder.html", "class_virtual_1_1_one_bit_decoder" ],
      [ "Or", "class_virtual_1_1_or.html", "class_virtual_1_1_or" ],
      [ "Or3", "class_virtual_1_1_or3.html", "class_virtual_1_1_or3" ],
      [ "Output", "class_virtual_1_1_output.html", "class_virtual_1_1_output" ],
      [ "Program", "class_virtual_1_1_program.html", "class_virtual_1_1_program" ],
      [ "Switch_in", "class_virtual_1_1_switch__in.html", "class_virtual_1_1_switch__in" ],
      [ "ThreeBitDecoder", "class_virtual_1_1_three_bit_decoder.html", "class_virtual_1_1_three_bit_decoder" ],
      [ "ToggledBit", "class_virtual_1_1_toggled_bit.html", null ],
      [ "ToggledByte", "class_virtual_1_1_toggled_byte.html", "class_virtual_1_1_toggled_byte" ],
      [ "Wire", "class_virtual_1_1_wire.html", "class_virtual_1_1_wire" ],
      [ "Xnor", "class_virtual_1_1_xnor.html", "class_virtual_1_1_xnor" ],
      [ "Xor", "class_virtual_1_1_xor.html", "class_virtual_1_1_xor" ]
    ] ]
];